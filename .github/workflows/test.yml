name: Test

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

permissions:
  contents: read

jobs:
  build:
    name: PHP ${{ matrix.php }} - ${{ matrix.webserver }} - ${{ matrix.db }} ${{ matrix.db-version }}${{ matrix.db-description }}
    env:
      DATABASE: ${{ (matrix.db == '5.7' || matrix.db == '8.0' || matrix.db == '8.4') && 'mysql' || 'mariadb' }}
      DOCKER_DIR: ${{ matrix.webserver }}_${{ matrix.php }}_${{ matrix.db }}
      OPENEMR_DIR: /var/www/localhost/htdocs/openemr
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        db:
        # Below 10.0 it's MySQL
        - '5.7'
        - '8.0'
        - '8.4'
        # Above 10.0 it's MariaDB
        - '10.5'
        - '10.6'
        - '10.11'
        - '11.4'
        - '11.6'
        node_version:
        - '20'
        php:
        - '8.2'
        - '8.3'
        - '8.4'
        - '8.5'
        testsuite:
        - 'api'
        - 'common'
        - 'controllers'
        - 'e2e'
        - 'fixtures'
        - 'services'
        - 'unit'
        - 'validators'
        webserver:
        - 'apache'
        - 'nginx'
        # Use `include` to limit the combinations to valid configurations
        include:
        - webserver: apache
          php: 8.2
          db: 11.4
        - webserver: apache
          php: 8.3
        - webserver: nginx
          db: 11.4
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Report PHP Version
        run: php -v

      - name: Install npm package
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      - name: Main build
        run: |
          . ci/ciLibrary.source
          composer_github_auth
          main_build

      - name: CCDA build
        run: |
          . ci/ciLibrary.source
          ccda_build

      - name: Dockers environment start
        run: |
          . ci/ciLibrary.source
          dockers_env_start

      - name: Wait for MySQL to initialize
        if: ${{ env.DATABASE == 'mysql' }}
        run: |
          echo "Waiting 60 seconds for MySQL to initialize..."
          sleep 60

      - name: Install and configure
        run: |
          . ci/ciLibrary.source
          install_configure

      - name: Run tests
        run: |
          . ci/ciLibrary.source
          build_test_${{ matrix.testsuite }}
